/*
 * EntityMgr.h
 *
 *  Created on: Feb 22, 2017
 *      Author: sushil
 */

#ifndef ENTITYMGR_H_
#define ENTITYMGR_H_


#include <list>
#include <OgreVector3.h>
#include <OgreSceneManager.h>
#include <OgreSceneNode.h>
#include <OgreEntity.h>

#include <OISEvents.h>
#include <OISInputManager.h>
#include <OISKeyboard.h>
#include <OISMouse.h>

#include <Entity381.h>
#include <mgr.h>
#include <Types.h>


class Engine;
class EntityMgr: public Mgr {

	//
public:

	std::list<Entity381 *> entities;

//	Ogre::SceneManager *ogreSceneMgr;
	Entity381* selectedEntity;

	EntityMgr(Engine *eng);
	//EntityMgr(Ogre::SceneManager *ogreSceneMgr);
	~EntityMgr();

	virtual void init();
	virtual void Tick(float dt);
	virtual void loadLevel();
	virtual void stop();

	Entity381 *CreateEntity(EntityType entityType, Ogre::Vector3 pos, float yaw = 0);
	void CreateOgreEntityAndNode(Entity381 *ent);
	//void Tick(float dt);
	void SelectNextEntity();

	float keyboardTimer;
	float deltaVelocity = 50.0f;

	void UpdateVelocity(const Ogre::FrameEvent& fe);
	void UpdatePosition(const Ogre::FrameEvent& fe);
	void UpdateDesiredSpeedHeading(const Ogre::FrameEvent& fe);

	Entity381* boat[5];

	Ogre::Vector3 velocity;
	Ogre::Vector3 position;
};



#endif /* ENTITYMGR_H_ */
